{"version":3,"file":"component---src-pages-cv-contact-js-d4a6e91dda9c67e9da87.js","mappings":";8FAAA,OAOA,WACE,aAEA,IAAIA,EAAS,GAAGC,eAEhB,SAASC,IAGP,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CACA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC1BL,EAAQM,KAAKF,QACR,GAAIG,MAAMC,QAAQJ,IACvB,GAAIA,EAAID,OAAQ,CACd,IAAIM,EAAQV,EAAWW,MAAM,KAAMN,GAE/BK,GACFT,EAAQM,KAAKG,SAGZ,GAAgB,WAAZJ,EACT,GAAID,EAAIO,WAAaC,OAAOC,UAAUF,SACpC,IAAK,IAAIG,KAAOV,EACVP,EAAOkB,KAAKX,EAAKU,IAAQV,EAAIU,IAC/Bd,EAAQM,KAAKQ,QAIjBd,EAAQM,KAAKF,EAAIO,aAKvB,OAAOX,EAAQgB,KAAK,KAGeC,EAAOC,SAC1CnB,EAAWoB,QAAUpB,EACrBkB,EAAOC,QAAUnB,QAKhB,KAFwB,EAAF,WACrB,OAAOA,GACR,QAFoB,OAEpB,aA9CL,yLCNWqB,EAAuB,8CC+BlC,EAzBgB,WACd,IAAMC,GAAOC,EAAAA,EAAAA,gBAAe,YAY5B,OACE,gBAACC,EAAA,QAAD,CAASC,MAAM,UAAUC,UAAWC,EAAAA,WACjCL,EAAKM,QAAQC,SAASC,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACzB,uBAAKN,UAAWC,GACd,gBAAC,IAAD,CAAiBK,KAAMC,EAAAA,EAAQD,KAC9BD,yHCVX,EAXgB,SAAC,GAAoC,IAAlCN,EAAiC,EAAjCA,MAAOS,EAA0B,EAA1BA,SAAUR,EAAgB,EAAhBA,UAClC,OACE,uBAAKA,UAAWS,GAAAA,CCLG,mCDK0BT,IAC3C,uBAAKA,UCLe,uCDMlB,uBAAKA,UCLM,gCDKoBD,IAEhCS","sources":["webpack://about-me/./node_modules/classnames/index.js","webpack://about-me/./src/pages/cv/Contact.module.scss","webpack://about-me/./src/pages/cv/Contact.js","webpack://about-me/./src/pages/cv/Section.js","webpack://about-me/./src/pages/cv/Section.module.scss"],"sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg)) {\n        if (arg.length) {\n          var inner = classNames.apply(null, arg);\n\n          if (inner) {\n            classes.push(inner);\n          }\n        }\n      } else if (argType === 'object') {\n        if (arg.toString === Object.prototype.toString) {\n          for (var key in arg) {\n            if (hasOwn.call(arg, key) && arg[key]) {\n              classes.push(key);\n            }\n          }\n        } else {\n          classes.push(arg.toString());\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","// extracted by mini-css-extract-plugin\nexport var contactItemContainer = \"Contact-module--contactItemContainer--yaTgw\";","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport IconMap from \"../../components/iconMap\"\nimport Section from \"./Section\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport * as styles from \"./Contact.module.scss\"\n\nconst Contact = () => {\n  const data = useStaticQuery(graphql`\n    query getContactData {\n      content {\n        contacts {\n          name\n          value\n          icon\n        }\n      }\n    }\n  `)\n\n  return (\n    <Section title=\"Contact\" className={styles.container}>\n      {data.content.contacts.map(({ value, icon }) => (\n        <div className={styles.contactItemContainer}>\n          <FontAwesomeIcon icon={IconMap[icon]} />\n          {value}\n        </div>\n      ))}\n    </Section>\n  )\n}\n\nexport default Contact\n","import React from \"react\"\nimport * as styles from \"./Section.module.scss\"\nimport classnames from \"classnames\"\n\nconst Section = ({ title, children, className }) => {\n  return (\n    <div className={classnames(styles.container, className)}>\n      <div className={styles.sectionTitle}>\n        <div className={styles.title}>{title}</div>\n      </div>\n      {children}\n    </div>\n  )\n}\n\nexport default Section\n","// extracted by mini-css-extract-plugin\nexport var container = \"Section-module--container--Moxyw\";\nexport var sectionTitle = \"Section-module--sectionTitle--ZNoEO\";\nexport var title = \"Section-module--title--ar6bJ\";"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","contactItemContainer","data","useStaticQuery","Section","title","className","styles","content","contacts","map","value","icon","IconMap","children","classnames"],"sourceRoot":""}